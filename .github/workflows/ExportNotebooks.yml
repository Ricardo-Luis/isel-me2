name: Export Pluto notebooks & Deploy
permissions:
    contents: write
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
concurrency:
    group: export
    cancel-in-progress: true
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              
            - name: 🙌 Install Julia (Latest Stable)
              uses: julia-actions/setup-julia@v2
              with:
                  version: '1.11'  # Usando a versão mais recente 1.11.x
                  
            - name: ⏱ Cache notebook states
              uses: actions/cache@v4
              with:
                path: _cache
                key: ${{ runner.os }}-pluto_state_cache-v5-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                restore-keys: |
                    ${{ runner.os }}-pluto_state_cache-v5-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                    
            - name: ⏱ Cache .julia
              uses: actions/cache@v4
              with:
                path: ~/.julia
                key: ${{ runner.os }}-dotjulia-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                restore-keys: |
                    ${{ runner.os }}-dotjulia-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                    
            - name: 🔍 Verify environment
              run: |
                echo "Julia version:"
                julia --version
                echo ""
                echo "📂 Repository structure:"
                ls -la
                echo ""
                echo "📄 Project.toml content:"
                cat pluto-deployment-environment/Project.toml
                
            - name: 📦 Install Julia dependencies
              run: |
                julia --project=pluto-deployment-environment -e '
                  using Pkg
                  Pkg.instantiate()
                  Pkg.precompile()
                  println("Installed packages:")
                  Pkg.status()
                '
                
            - name: 🔍 Verify notebook structure
              run: |
                echo "📂 Content directory:"
                ls -la content/
                echo ""
                echo "🔍 Found notebooks:"
                find content -name "*.jl" | head -10
                
            - name: 🪴 Generate site
              run: |
                # Create symbolic link for PlutoPages
                ln -sfn content src
                
                julia --color=yes --project=pluto-deployment-environment -e '
                  using Pkg
                  Pkg.instantiate()
                  
                  @info "Starting PlutoPages generation..."
                  try
                      using PlutoPages
                      
                      @info "PlutoPages version: $(pkgversion(PlutoPages))"
                      
                      PlutoPages.generate("."; 
                          html_report_path="generation_report.html",
                          verbose=true
                      )
                      
                      @info "✅ Site generation completed"
                      
                      # Safe directory listing using Julia
                      if isdir("_site")
                          @info "Contents of _site:"
                          for (root, dirs, files) in walkdir("_site")
                              println("📁 ", root)
                              if !isempty(files)
                                  println("   └ ", join(files[1:min(5, end)], "\n    └ "))
                              end
                          end
                      else
                          @error "❌ _site directory not created!"
                      end
                  catch e
                      @error "❌ Generation failed!" exception=(e, catch_backtrace())
                      
                      # Try to read the report if exists
                      if isfile("generation_report.html")
                          println("\n📄 Generation report content:")
                          println(read("generation_report.html", String))
                      end
                      
                      exit(1)
                  end
                '
                
            - name: 📰 Upload generation artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: generation-artifacts
                path: |
                  generation_report.html
                  _site/
                retention-days: 1
                
            - name: 🔍 Debug - Check generated site
              if: always()
              run: |
                echo "Julia version details:"
                julia -e 'versioninfo()'
                echo ""
                if [ -d "_site" ]; then
                  echo "✅ _site directory exists ($(du -sh _site))"
                  echo "📂 First 10 files:"
                  find _site -type f | head -10
                else
                  echo "❌ _site directory missing"
                fi
                
            - name: 🏗 Build final site structure
              run: |
                mkdir -p www
                
                # Move generated site
                if [ -d "_site" ] && [ "$(ls -A _site)" ]; then
                  mv _site www/Fall23
                  echo "✅ Moved _site to www/Fall23"
                else
                  mkdir -p www/Fall23
                  echo "<h1>Site under construction</h1>" > www/Fall23/index.html
                  echo "⚠️ Created fallback index.html"
                fi
                
                # Create root redirect
                cat > www/index.html << 'EOF'
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Computational Thinking</title>
                    <meta http-equiv="refresh" content="0; url=./Fall23/">
                    <style>
                        body { 
                            font-family: Arial, sans-serif; 
                            text-align: center; 
                            padding: 50px; 
                            background-color: #f5f5f5;
                        }
                        .container {
                            max-width: 600px;
                            margin: 0 auto;
                            background: white;
                            padding: 40px;
                            border-radius: 10px;
                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                        }
                        a { 
                            color: #007bff; 
                            text-decoration: none; 
                            font-weight: bold;
                        }
                        a:hover { text-decoration: underline; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>Computational Thinking</h1>
                        <p>Redirecting to Fall 23 content...</p>
                        <p>If not redirected, <a href="./Fall23/">click here</a>.</p>
                    </div>
                </body>
                </html>
                EOF
                
                echo "📁 Final www structure:"
                tree -L 3 www || find www -type f | sort
                
            - name: 🚀 Deploy to GitHub Pages
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              uses: actions/deploy-pages@v4
              
            - name: 📦 Upload Pages artifact
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              uses: actions/upload-pages-artifact@v3
              with:
                path: www
    
            - name: Deploy PR preview
              if: github.event_name == 'pull_request' && github.repository == github.event.pull_request.head.repo.full_name
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: output
                folder: www
                target-folder: "previews/PR${{ github.event.number }}"
