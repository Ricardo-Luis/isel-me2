name: Export Pluto notebooks & Deploy
permissions:
    contents: write
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
concurrency:
    group: export
    cancel-in-progress: true
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Fall 23 source
              uses: actions/checkout@v4
              
            - name: 🙌 Install Julia
              uses: julia-actions/setup-julia@v2
              with:
                  version: "1"
                  
            - name: ⏱ Cache notebook states
              uses: actions/cache@v4
              with:
                path: _cache
                key: ${{ runner.os }}-pluto_state_cache-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}-${{ github.run_id }}
                restore-keys: |
                    ${{ runner.os }}-pluto_state_cache-v3-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                    
            - name: ⏱ Cache .julia
              uses: actions/cache@v4
              with:
                path: ~/.julia
                key: ${{ runner.os }}-dotjulia-v1-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}-${{ github.run_id }}
                restore-keys: |
                    ${{ runner.os }}-dotjulia-v1-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
                    
            - name: 🔧 Setup Julia environment
              run: |
                echo "🔍 Verificando ambiente pluto-deployment-environment..."
                if [ -f "pluto-deployment-environment/Project.toml" ]; then
                  echo "✅ Project.toml encontrado"
                  echo "📄 Conteúdo do Project.toml:"
                  cat pluto-deployment-environment/Project.toml
                  echo ""
                  if [ -f "pluto-deployment-environment/Manifest.toml" ]; then
                    echo "📄 Manifest.toml também existe"
                  else
                    echo "⚠️ Manifest.toml não encontrado"
                  fi
                else
                  echo "❌ Project.toml não encontrado em pluto-deployment-environment/"
                fi
                
            - name: 🪴 Generate site
              run: |
                echo "🔧 Gerando site com PlutoPages..."
                julia --project=pluto-deployment-environment -e '
                  import Pkg;
                  println("🔍 Ambiente ativo: ", Pkg.project().path);
                  println("📦 Dependências: ", keys(Pkg.project().dependencies));
                  Pkg.instantiate();
                  
                  # Verificar se PlutoPages está disponível
                  if haskey(Pkg.project().dependencies, "PlutoPages")
                    println("✅ PlutoPages encontrado nas dependências");
                  else
                    println("⚠️ PlutoPages não está nas dependências, adicionando...");
                    Pkg.add("PlutoPages");
                  end
                  
                  println("🚀 Importando PlutoPages...");
                  import PlutoPages;
                  println("✅ PlutoPages importado com sucesso");
                  
                  println("🔧 Gerando site...");
                  PlutoPages.generate("."; html_report_path="generation_report.html");
                  println("✅ Site gerado com sucesso");
                '
                  
            - name: 📰 Upload site generation report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: generation-report
                path: generation_report.html
                
            - name: 🔍 Debug - Check generated files
              run: |
                echo "📂 Estrutura após geração:"
                ls -la
                echo ""
                echo "📂 Conteúdo _site (se existir):"
                if [ -d "_site" ]; then
                  find _site -type f | head -10
                else
                  echo "❌ _site não encontrado"
                fi
                echo ""
                echo "📂 Conteúdo extra_outputs (se existir):"
                if [ -d "extra_outputs" ]; then
                  find extra_outputs -type f | head -10
                else
                  echo "❌ extra_outputs não encontrado"
                fi
                
            - name: 🔀 Combine semesters into single site
              run: |
                echo "🔧 Criando estrutura do site..."
                mkdir -p www
                
                # Verificar se _site existe e mover
                if [ -d "_site" ] && [ "$(ls -A _site)" ]; then
                  mv _site www/Fall23
                  echo "✅ _site movido para www/Fall23"
                else
                  echo "❌ _site não encontrado ou vazio"
                  # Criar pasta vazia como fallback
                  mkdir -p www/Fall23
                  echo "<h1>Site em construção</h1>" > www/Fall23/index.html
                fi
                
                # Verificar se extra_outputs existe e mover
                if [ -d "extra_outputs" ] && [ "$(ls -A extra_outputs)" ]; then
                  mv extra_outputs/* www/
                  echo "✅ extra_outputs movido para www/"
                else
                  echo "ℹ️ extra_outputs não encontrado ou vazio"
                fi
                
                # Criar index.html na raiz se não existir
                if [ ! -f "www/index.html" ]; then
                  cat > www/index.html << 'EOF'
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Computational Thinking</title>
                    <meta http-equiv="refresh" content="0; url=./Fall23/">
                    <style>
                        body { 
                            font-family: Arial, sans-serif; 
                            text-align: center; 
                            padding: 50px; 
                            background-color: #f5f5f5;
                        }
                        .container {
                            max-width: 600px;
                            margin: 0 auto;
                            background: white;
                            padding: 40px;
                            border-radius: 10px;
                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                        }
                        a { 
                            color: #007bff; 
                            text-decoration: none; 
                            font-weight: bold;
                        }
                        a:hover { text-decoration: underline; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>Computational Thinking</h1>
                        <p>A redirecionar para o conteúdo Fall 23...</p>
                        <p>Se não for redirecionado automaticamente, <a href="./Fall23/">clique aqui</a>.</p>
                    </div>
                    <script>
                        setTimeout(function() {
                            window.location.href = './Fall23/';
                        }, 100);
                    </script>
                </body>
                </html>
                EOF
                  echo "✅ index.html criado na raiz"
                fi
                
                echo "📁 Estrutura final do www:"
                find www -type f | sort
                
            - name: 🚀 Deploy to GitHub Pages (main)
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              uses: actions/deploy-pages@v4
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                artifact_name: github-pages
                
            - name: 📦 Upload Pages artifact
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              uses: actions/upload-pages-artifact@v3
              with:
                path: www
    
            - name: Deploy PR preview
              if: github.event_name == 'pull_request' && github.repository == github.event.pull_request.head.repo.full_name
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: output
                folder: www
                target-folder: "previews/PR${{ github.event.number }}"
